name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.build.outputs.artifact-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: supplypike/setup-bin@v4
        with:
          name: uv
          version: latest
          uri: https://astral.sh/uv/install.sh

      - name: Build package
        id: build
        run: |
          uv build
          echo "artifact-path=$(ls dist/*.tar.gz || true)" >> $GITHUB_OUTPUT

  create-release:
    name: Create GitHub Release with notes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate GitHub Release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build, create-release]  # Ensure GitHub Release exists before publishing
    environment: publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: supplypike/setup-bin@v4
        with:
          name: uv
          version: latest
          uri: https://astral.sh/uv/install.sh

      - name: Show version
        run: python -c "import setuptools_scm; print(setuptools_scm.get_version())"

      - name: Build the package
        run: uv build

      - name: List dist files
        run: ls -lh dist/

      - name: Publish to PyPI
        run: uv publish --strict
